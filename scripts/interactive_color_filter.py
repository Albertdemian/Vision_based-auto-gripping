# -*- coding: utf-8 -*-
"""interactive_color_filter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n37d9kvM52e8xhnwdrpQsl3zQWIfweHw
"""

import numpy as np
import cv2 
from matplotlib import pyplot as plt

img = cv2.imread("image.jpg")
plt.imshow(img)
plt.show()

#[
#	([17, 15, 100], [50, 56, 200]),
#	([86, 31, 4], [220, 88, 50]),
#	([25, 146, 190], [62, 174, 250]),
#	([103, 86, 65], [145, 133, 128])
#]
boundaries = [
	
	([25, 50, 50], [62, 200, 250])
]

for (lower, upper) in boundaries:
	# create NumPy arrays from the boundaries
	lower = np.array(lower, dtype = "uint8")
	upper = np.array(upper, dtype = "uint8")

 

	# find the colors within the specified boundaries and apply
	# the mask
	mask = cv2.inRange(img, lower, upper)
	output = cv2.bitwise_and(img, img, mask = mask)
 
plt.imshow(output)
	# show the images
	#cv2.imshow("images", np.hstack([img, output]))
	#v2.waitKey(0)